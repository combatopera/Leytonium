#!/bin/bash

#HALP Semi-interactively squash a most-recent chunk of commits.

set -e

base=$(pb)

ids=($(git cherry $base | tac | while read _ id; do echo $id; done))

function commitmessage {
    git log -n 1 --format=%s "$@"
}

function cherry {
    for id in ${ids[@]}; do
        echo $id "$(commitmessage $id)"
    done
}

. git_functions

menu cherry Which commit should absorb all newer commits

index=$((MENU_NUMBER-1))

id=${ids[$index]}

git reset --hard $id

git cherry-pick $(for i in $(seq $((index-1)) -1 0); do echo ${ids[$i]}; done)

git reset --soft $id~1

message="$(commitmessage $id)"

git commit -em "$message"
