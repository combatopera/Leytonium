function whereami {
    echo "$(dirname "$BASH_SOURCE")"
}
. "$(whereami)/git_functions"

function _allbranches {
    local branches="$(git branch | cut -c 3-)"
    COMPREPLY=($(compgen -W "$branches" $2))
}

function _otherbranches {
    local branches="$(git branch | grep -v '^[*]' | cut -c 3-)"
    COMPREPLY=($(compgen -W "$branches" $2))
}

function _branchnames {
    local names="$(allbranches | grep -v '^master$' | sed 's/^[^-]*-//')"
    COMPREPLY=($(compgen -W "$names" $2))
}

function _demonames {
    local names="$(
        cdtocorda
        cd samples
        for d in *; do [[ -e $d/build.gradle ]] && echo $d; done
    )"
    COMPREPLY=($(compgen -W "$names" $2))
}

function _commonmessages {
    COMPREPLY=($(compgen -W 'conciser refactor refactoring undup redundant mv ren inline formatting unused idiomaticer consistency obsolete comment documentation efficienter' $2))
}

function _unconflictedpaths {
    local paths="$(git diff --name-only --diff-filter=U | while read path; do
        grep '^=======$' "$path" &>/dev/null || echo "$path"
    done)"
    COMPREPLY=($(compgen -W "$paths" $2)) # FIXME: Relativise against working dir.
}

complete -F _allbranches ren
complete -F _otherbranches co
complete -F _otherbranches eb
complete -F _otherbranches setparent
complete -F _branchnames br
complete -F _demonames demo
complete -F _commonmessages ci
complete -F _unconflictedpaths rd
complete -F _unconflictedpaths rdx
